{
  "_args": [
    [
      {
        "raw": "conventional-changelog-cli@^1.3.13",
        "scope": null,
        "escapedName": "conventional-changelog-cli",
        "name": "conventional-changelog-cli",
        "rawSpec": "^1.3.13",
        "spec": ">=1.3.13 <2.0.0",
        "type": "range"
      },
      "/Users/temisaniwere/Documents/Projects/cryptochicks/SmartSponsor/node_modules/lerna"
    ]
  ],
  "_from": "conventional-changelog-cli@>=1.3.13 <2.0.0",
  "_id": "conventional-changelog-cli@1.3.21",
  "_inCache": true,
  "_location": "/conventional-changelog-cli",
  "_nodeVersion": "8.10.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/conventional-changelog-cli_1.3.21_1522205902894_0.9427308922955111"
  },
  "_npmUser": {
    "name": "hbetts",
    "email": "hutson@hyper-expanse.net"
  },
  "_npmVersion": "5.7.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "conventional-changelog-cli@^1.3.13",
    "scope": null,
    "escapedName": "conventional-changelog-cli",
    "name": "conventional-changelog-cli",
    "rawSpec": "^1.3.13",
    "spec": ">=1.3.13 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/lerna"
  ],
  "_resolved": "https://registry.npmjs.org/conventional-changelog-cli/-/conventional-changelog-cli-1.3.21.tgz",
  "_shasum": "f6b063102ba34c0f2bec552249ee233e0762e0a4",
  "_shrinkwrap": null,
  "_spec": "conventional-changelog-cli@^1.3.13",
  "_where": "/Users/temisaniwere/Documents/Projects/cryptochicks/SmartSponsor/node_modules/lerna",
  "author": {
    "name": "Steve Mao",
    "email": "maochenyan@gmail.com",
    "url": "https://github.com/stevemao"
  },
  "bin": {
    "conventional-changelog": "cli.js"
  },
  "bugs": {
    "url": "https://github.com/conventional-changelog/conventional-changelog/issues"
  },
  "dependencies": {
    "add-stream": "^1.0.0",
    "conventional-changelog": "^1.1.23",
    "lodash": "^4.2.1",
    "meow": "^4.0.0",
    "tempfile": "^1.1.1"
  },
  "description": "Generate a changelog from git metadata",
  "devDependencies": {
    "concat-stream": "^1.6.0",
    "q": "^1.5.1",
    "shelljs": "^0.8.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-K9VBljxzuATZCLTVnI83PN7WdeRJRPPB5FumuLk4ES3E+m2YJvX07DRbdJlINk6C2DeAjj4ioS5JvsvJaaCRbA==",
    "shasum": "f6b063102ba34c0f2bec552249ee233e0762e0a4",
    "tarball": "https://registry.npmjs.org/conventional-changelog-cli/-/conventional-changelog-cli-1.3.21.tgz",
    "fileCount": 5,
    "unpackedSize": 22249
  },
  "files": [
    "cli.js"
  ],
  "homepage": "https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-cli#readme",
  "keywords": [
    "cli",
    "cli-app",
    "conventional-changelog",
    "conventional",
    "changelog",
    "log"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "bcoe",
      "email": "ben@npmjs.com"
    },
    {
      "name": "dlmr",
      "email": "gustaf.dalemar@gmail.com"
    },
    {
      "name": "hbetts",
      "email": "hutson@hyper-expanse.net"
    },
    {
      "name": "marionebl",
      "email": "hello@mario-nebl.de"
    },
    {
      "name": "stevemao",
      "email": "maochenyan@gmail.com"
    },
    {
      "name": "tapppi",
      "email": "moilanen.tapani@gmail.com"
    }
  ],
  "name": "conventional-changelog-cli",
  "optionalDependencies": {},
  "readme": "# conventional-changelog-cli\n\n[![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Dependency Status][daviddm-image]][daviddm-url] [![Coverage percentage][coveralls-image]][coveralls-url]\n\n> Generate a changelog from git metadata\n\n*[Changelog?](https://speakerdeck.com/stevemao/compose-a-changelog)*\n\n**Note** You don't have to use the angular commit convention. For the best result of the tool to tokenize you commit and produce flexible output, it's recommended to use a commit convention.\n\n\n## Quick start\n\n```sh\n$ npm install -g conventional-changelog-cli\n$ cd my-project\n$ conventional-changelog -p angular -i CHANGELOG.md -s\n```\n\nThis will *not* overwrite any previous changelog. The above generates a changelog based on commits since the last semver tag that match the pattern of a \"Feature\", \"Fix\", \"Performance Improvement\" or \"Breaking Changes\".\n\nIf you first time use this tool and want to generate all previous changelog, you could do\n\n```sh\n$ conventional-changelog -p angular -i CHANGELOG.md -s -r 0\n```\n\nThis *will* overwrite any previous changelog if exist.\n\nAll available command line parameters can be listed using CLI: `conventional-changelog --help`.\n\n**Hint:** You can alias your command or add it to your package.json. EG: `\"changelog\": \"conventional-changelog -p angular -i CHANGELOG.md -s -r 0\"`.\n\nTo fully customize the tool, please checkout [conventional-changelog](https://github.com/ajoslin/conventional-changelog) and [conventional-changelog-core](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-core) docs. You can find more details there. **Note: `config` here can work with `preset`, which is different than `options.config` in conventional-changelog.**\n\n\n## Example output\n\n- https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog/CHANGELOG.md\n- https://github.com/karma-runner/karma/blob/master/CHANGELOG.md\n- https://github.com/btford/grunt-conventional-changelog/blob/master/CHANGELOG.md\n\n\n## Recommended workflow\n\n1. Make changes\n1. Commit those changes\n1. Make sure Travis turns green\n1. Bump version in `package.json`\n1. `conventionalChangelog`\n1. Commit `package.json` and `CHANGELOG.md` files\n1. Tag\n1. Push\n\nThe reason why you should commit and tag after `conventionalChangelog` is that the CHANGELOG should be included in the new release, hence `gitRawCommitsOpts.from` defaults to the latest semver tag.\n\n\n### With `npm version`\n\nUsing the npm scripts to our advantage with the following hooks:\n\n```json\n{\n  \"scripts\": {\n    \"version\": \"conventional-changelog -p angular -i CHANGELOG.md -s -r 0 && git add CHANGELOG.md\"\n  }\n}\n```\n\nYou could follow the following workflow\n\n1. Make changes\n1. Commit those changes\n1. Pull all the tags\n1. Run the [`npm version [path|minor|major]`](https://docs.npmjs.com/cli/version) command\n1. Push\n\nYou could optionally add a `preversion` script to package your project or running a full suit of test.\nAnd a `postversion` script to clean your system and push your release and tags.\n\nBy adding a `.npmrc` you could also automate your commit message and set your tag prefix as such:\n\n```\ntag-version-prefix=\"\"\nmessage=\"chore(release): %s :tada:\"\n```\n\n\n## Why\n\n- Used by AngularJS, JSHint and related projects.\n- Easy fully automate changelog generation. You could still add more points on top of it.\n- Ignoring reverted commits, templating with [handlebars.js](https://github.com/wycats/handlebars.js) and links to references, etc. Open an [issue](../../issues/new) if you want more reasonable features.\n- Intelligently setup defaults but yet fully configurable with presets of [popular projects](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog#preset).\n- Everything internally or externally is pluggable.\n- A lot of tests and actively maintained.\n\n### Problems with [github-changelog-generator](https://github.com/skywinder/github-changelog-generator) or similar projects\n\n- Opinionated on how to write commits, issues or PRs.\n- No or partially support reference links.\n- Not system agnostic. Only support GitHub.\n- No template support. The output is mostly certain format of markdown.\n- No presets of popular commit message conventions.\n- Not modularized. Over the years [modularization is proven to be the best practice](https://github.com/sindresorhus/ama/issues/10#issuecomment-117766328).\n- No tests or coverage is too low. Program might be buggy.\n- Do not read your project's environment.\n- No or few task runner or build tool integrations.\n\n\n## Related\n\n- [conventional-changelog](https://github.com/ajoslin/conventional-changelog) - API of this module\n- [standard-changelog](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/standard-changelog) - Similar to this module but only with angular convention\n- [conventional-github-releaser](https://github.com/conventional-changelog/conventional-github-releaser) - Make a new GitHub release from git metadata\n- [conventional-recommended-bump](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-recommended-bump) - Get a recommended version bump based on conventional commits\n- [conventional-commits-detector](https://github.com/conventional-changelog/conventional-commits-detector) - Detect what commit message convention your repository is using\n- [commitizen](https://github.com/commitizen/cz-cli) - Simple commit conventions for internet citizens.\n- [angular-precommit](https://github.com/ajoslin/angular-precommit) - Pre commit with angular conventions\n- [commitlint](https://github.com/marionebl/commitlint) - Lint commit messages\n\n\n## License\n\nMIT Â© [Steve Mao](https://github.com/stevemao)\n\n\n[npm-image]: https://badge.fury.io/js/conventional-changelog-cli.svg\n[npm-url]: https://npmjs.org/package/conventional-changelog-cli\n[travis-image]: https://travis-ci.org/conventional-changelog/conventional-changelog-cli.svg?branch=master\n[travis-url]: https://travis-ci.org/conventional-changelog/conventional-changelog-cli\n[daviddm-image]: https://david-dm.org/conventional-changelog/conventional-changelog-cli.svg?theme=shields.io\n[daviddm-url]: https://david-dm.org/conventional-changelog/conventional-changelog-cli\n[coveralls-image]: https://coveralls.io/repos/conventional-changelog/conventional-changelog-cli/badge.svg\n[coveralls-url]: https://coveralls.io/r/conventional-changelog/conventional-changelog-cli\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/conventional-changelog/conventional-changelog.git"
  },
  "scripts": {
    "lint": "eslint --fix .",
    "test": "mocha --timeout 30000 && npm run-script lint",
    "test-windows": "echo 'make work on windows'"
  },
  "version": "1.3.21"
}
